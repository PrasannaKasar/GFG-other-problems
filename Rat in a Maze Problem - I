class Solution {
    public ArrayList<String> findPath(int[][] mat) {
        ArrayList<String> ans = new ArrayList<>();
        helper(mat, ans, 0, 0, "");
        return ans;
    }
    
    public static void helper(int[][] maze, List<String> ans, int row, int col, String path) {
        if (row < 0 || row >= maze.length || col < 0 || col >= maze.length || maze[row][col] == 0) {
            return;
        }
        
        if (row == maze.length-1 && col == maze.length-1) {
            ans.add(path);
            return;
        }
    
        maze[row][col] = 0;
        int[] row_offsets = {1,0,0,-1};
        int[] col_offsets = {0,-1,1,0};
        char[] direction = {'D', 'L', 'R', 'U'};
        for (int i = 0; i < 4; i++) {
            helper(maze, ans, row+row_offsets[i], col+col_offsets[i], path+direction[i]);
        }
        maze[row][col] = 1;
    }
}
